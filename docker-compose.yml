# ROS 2 "auditor" container that behaves like a host on the network.
# Uses host networking so DDS discovery and multicast work out-of-the-box.

services:
  auditor:
    build:
      context: .
      args:
        ROS_DISTRO: ${ROS_DISTRO:-jazzy}
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    image: psyche/auditor:${ROS_DISTRO:-jazzy}

    # Key setting for ROS 2 to participate in the host's DDS domain
    network_mode: host
    ipc: host

    environment:
      # ROS 2 discovery and middleware
      ROS_DOMAIN_ID: ${ROS_DOMAIN_ID:-0}
      RMW_IMPLEMENTATION: ${RMW_IMPLEMENTATION:-rmw_fastrtps_cpp}

      # Optional X11 for GUI tools (uncomment DISPLAY and volumes below)
      # DISPLAY: ${DISPLAY}

    # Mount project and a ROS 2 workspace for overlays
    volumes:
      - ./:/workspaces/psyche
      - ./ros2_ws:/workspaces/ros2_ws
      # For X11 GUI tools (Linux):
      # - /tmp/.X11-unix:/tmp/.X11-unix:rw
      # - ${HOME}/.Xauthority:/home/rosuser/.Xauthority:ro

    # Stay interactive-friendly
    stdin_open: true
    tty: true

    # Uncomment if you need hardware access (USB, etc.)
    # privileged: true
    # devices:
    #   - /dev/ttyUSB0:/dev/ttyUSB0

    restart: unless-stopped

    # Example profiles for optional device mappings
    # profiles:
    #   - serial
