openapi: 3.0.3
info:
  title: Notes to Self Service
  description: This is part of the PETE Project. These "notes to self" provide a powerful mechanism for Pete to remember and recall information relevant to the conversation at hand.
  version: "1.0.0"
servers:
  - url: https://r8vjkvbzlf.execute-api.us-east-2.amazonaws.com/experiment
paths:
  /notes:
    post:
      operationId: memorize
      summary: Make notes to yourself
      description: Stores multiple notes in a single request. Try to make notes to yourself on every turn you have in the conversation.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                notes:
                  type: array
                  items:
                    $ref: '#/components/schemas/LooseNote'
      responses:
        '201':
          description: Successfully created new notes.
          content:
            application/json:
              schema:
                type: object
                properties:
                  noteIds:
                    type: array
                    items:
                      type: string
        '400':
          description: Missing or invalid request body.
  /notes/{noteId}:
    get:
      operationId: recall
      summary: Retrieve a specific note with associations
      description: Retrieves a specific note, including its direct associations and priority associated notes. Priority predicates include "depricates" (or "is deprecated by") and "is important for" (again, in the passive).
      parameters:
        - in: path
          name: noteId
          required: true
          schema:
            type: string
          description: The ID of the note to retrieve.
      responses:
        '200':
          description: Successfully retrieved the note and its associations.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteWithAssociations'
        '404':
          description: Note with the specified ID was not found.
  /topics:
    get:
      operationId: nowWhereWereWe
      summary: Retrieve topics with metadata
      description: Retrieves topics along with detailed metadata based on customizable query parameters. Start all conversations with a plain call to this so you know where you last left off. Then call it as much as you need it to explore topics.
      parameters:
        - in: query
          name: sorting
          schema:
            type: string
            enum: ["recent", "frequent"]
            default: "recent"
          description: Sort by.
        - in: query
          name: page
          schema:
            type: integer
          description: Page number of results to retrieve.
        - in: query
          name: pageSize
          schema:
            type: integer
          description: Number of results per page.
      responses:
        '200':
          description: Successfully retrieved topics and their metadata.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicsMetadata'
  /topics/{topic}:
    get:
      operationId: whatDoIKnowAbout
      summary: Retrieve detailed information about a specific topic
      description: Returns the top result fully fleshed out and reference IDs to all other notes associated with the topic.
      parameters:
        - in: path
          name: topic
          required: true
          schema:
            type: string
          description: The name of the topic to retrieve information about.
      responses:
        '200':
          description: Successfully retrieved detailed information about the topic.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TopicDetail'
components:
  schemas:
    LooseNote:
      type: object
      required:
        - message
      properties:
        topics:
          type: array
          items:
            type: string
        message:
          type: string
        context:
          type: string
        sensitivity:
          $ref: '#/components/schemas/Sensitivity'
    Note:
      allOf:
        - type: object
          properties:
            id:
              type: string
            created:
              type: string
              format: date-time
        - $ref: '#/components/schemas/LooseNote'
        
    Sensitivity:
      type: string
      enum:
        - private
        - internal
        - public
        - confidential
    NoteWithAssociations:
      type: object
      properties:
        note:
          $ref: '#/components/schemas/Note'
        associations:
          type: array
          items:
            type: object
            properties:
              type:
                type: string
              target_note_id:
                type: string
        immediateLinks:
          type: array
          items:
            $ref: '#/components/schemas/Note'
    TopicsMetadata:
      type: object
      properties:
        currentTime:
          type: string
          format: date-time
        sorting:
          type: object
          properties:
            field:
              type: string
            order:
              type: string
        paging:
          type: object
          properties:
            currentPage:
              type: integer
            pageSize:
              type: integer
            totalPages:
              type: integer
        results:
          type: array
          items:
            $ref: '#/components/schemas/TopicMetadata'
    TopicMetadata:
      type: object
      properties:
        topic:
          type: string
        last_accessed:
          type: string
          format: date-time
        frequency_of_access:
          type: integer
        number_of_related_notes:
          type: integer
    TopicDetail:
      type: object
      properties:
        topResults:
          type: array
          items:
            $ref: '#/components/schemas/Note'
        otherNoteIds:
          type: array
          items:
            type: string

  securitySchemes:
    api_key:
      type: apiKey
      name: x-api-key
      in: header

security:
  - api_key: []