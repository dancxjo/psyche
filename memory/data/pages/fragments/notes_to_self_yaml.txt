openapi: "3.0.1"
info:
  title: "Notes to Self Service"
  description: "This is part of the PETE Project. These \"notes to self\" provide\
    \ a powerful mechanism for Pete to remember and recall information relevant to\
    \ the conversation at hand."
  version: "1.0.0"
servers:
- url: "https://r8vjkvbzlf.execute-api.us-east-2.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "experiment"
paths:
  /topics:
    get:
      summary: "Retrieve topics with metadata"
      description: "Retrieves topics along with detailed metadata based on customizable\
        \ query parameters."
      operationId: "nowWhereWereWe"
      parameters:
      - name: "pageSize"
        in: "query"
        description: "Number of results per page."
        schema:
          type: "string"
      - name: "sorting"
        in: "query"
        description: "Sorting order and field."
        schema:
          type: "string"
      - name: "page"
        in: "query"
        description: "Page number of results to retrieve."
        schema:
          type: "string"
      responses:
        "200":
          description: "Successfully retrieved topics and their metadata."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicsMetadata"
      security:
      - api_key: []
  /notes/{noteId}:
    get:
      summary: "Retrieve a specific note with associations"
      description: "Retrieves a specific note, including its direct associations and\
        \ priority associated notes."
      operationId: "recallNote"
      parameters:
      - name: "noteId"
        in: "path"
        description: "The ID of the note to retrieve."
        required: true
        schema:
          type: "string"
      responses:
        "404":
          description: "Note with the specified ID was not found."
          content: {}
        "200":
          description: "Successfully retrieved the note and its associations."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/NoteWithAssociations"
      security:
      - api_key: []
  /notes:
    post:
      summary: "Make notes to yourself"
      description: "Stores multiple notes in a single request."
      operationId: "memorizeNotes"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MODEL57b1df"
        required: true
      responses:
        "400":
          description: "Missing or invalid request body."
          content: {}
        "201":
          description: "Successfully created new notes."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MODEL6420f6"
      security:
      - api_key: []
  /topics/{topic}:
    get:
      summary: "Retrieve detailed information about a specific topic"
      description: "Returns the top result fully fleshed out and reference IDs to\
        \ all other notes associated with the topic."
      operationId: "whatDoIKnowAbout"
      parameters:
      - name: "topic"
        in: "path"
        description: "The name of the topic to retrieve information about."
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "Successfully retrieved detailed information about the topic."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TopicDetail"
      security:
      - api_key: []
components:
  schemas:
    MODEL6420f6:
      type: "object"
      properties:
        noteIds:
          type: "array"
          items:
            type: "string"
    Sensitivity:
      type: "string"
      enum:
      - "private"
      - "internal"
      - "public"
      - "confidential"
    TopicDetail:
      type: "object"
      properties:
        topResult:
          $ref: "#/components/schemas/Note"
        otherNoteIds:
          type: "array"
          items:
            type: "string"
    Note:
      required:
      - "message"
      type: "object"
      properties:
        topics:
          type: "array"
          items:
            type: "string"
        message:
          type: "string"
        context:
          type: "string"
        sensitivity:
          $ref: "#/components/schemas/Sensitivity"
    TopicsMetadata:
      type: "object"
      properties:
        currentTime:
          type: "string"
          format: "date-time"
        sorting:
          type: "object"
          properties:
            field:
              type: "string"
            order:
              type: "string"
        paging:
          type: "object"
          properties:
            currentPage:
              type: "integer"
              format: "int32"
            pageSize:
              type: "integer"
              format: "int32"
            totalPages:
              type: "integer"
              format: "int32"
        results:
          type: "array"
          items:
            $ref: "#/components/schemas/TopicMetadata"
    MODEL57b1df:
      type: "object"
      properties:
        notes:
          type: "array"
          items:
            $ref: "#/components/schemas/Note"
    NoteWithAssociations:
      type: "object"
      properties:
        _id:
          type: "string"
        topics:
          type: "array"
          items:
            type: "string"
        message:
          type: "string"
        context:
          type: "string"
        sensitivity:
          $ref: "#/components/schemas/Sensitivity"
        associations:
          type: "array"
          items:
            type: "object"
            properties:
              type:
                type: "string"
              target_note_id:
                type: "string"
    TopicMetadata:
      type: "object"
      properties:
        topic:
          type: "string"
        last_accessed:
          type: "string"
          format: "date-time"
        frequency_of_access:
          type: "integer"
          format: "int32"
        number_of_related_notes:
          type: "integer"
          format: "int32"
  securitySchemes:
    api_key:
      type: "apiKey"
      name: "x-api-key"
      in: "header"
