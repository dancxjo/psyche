a:338:{i:0;a:3:{i:0;s:14:"document_start";i:1;a:0:{}i:2;i:0;}i:1;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:0;}i:2;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1;}i:3;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:275:" PETE works by prompting a language model with a partial context, and then asking it to continue it on behalf of PETE. When the LM closes the context, it is popped, stored and then referenced in its parent context, which becomes the current context.
root ::= ongoing_context ";}i:2;i:3;}i:4;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:278;}i:5;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"}";}i:2;i:279;}i:6;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:280;}i:7;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"?

";}i:2;i:281;}i:8;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:284;}i:9;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:171:" A context is sort of a record of the mental activity of PETE. It is used to store the state of the conversation and of the entire system itself. It is used to condense a ";}i:2;i:286;}i:10;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:457;}i:11;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:"frame of memory";}i:2;i:458;}i:12;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:473;}i:13;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:133:" into something that can be serialized into the db and also exposed to the language model, that is to say, it fits in a finite space.";}i:2;i:474;}i:14;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:607;}i:15;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:607;}i:16;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:609;}i:17;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:102:" Syntactically, contexts look a lot like functions in javascript
complete_context ::= ongoing_context ";}i:2;i:611;}i:18;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:713;}i:19;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"}";}i:2;i:714;}i:20;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:715;}i:21;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:34:"
ongoing_context ::= context_head ";}i:2;i:716;}i:22;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:750;}i:23;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"{";}i:2;i:751;}i:24;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:752;}i:25;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:31:" context_body
context_head ::= ";}i:2;i:753;}i:26;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:784;}i:27;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"context";}i:2;i:785;}i:28;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:792;}i:29;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" ws id ws ";}i:2;i:793;}i:30;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:803;}i:31;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"(";}i:2;i:804;}i:32;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:805;}i:33;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" ws (ref (ws ";}i:2;i:806;}i:34;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:819;}i:35;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:",";}i:2;i:820;}i:36;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:821;}i:37;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" ws ref)*)? ws ";}i:2;i:822;}i:38;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:837;}i:39;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:")";}i:2;i:838;}i:40;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:839;}i:41;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" ws 
";}i:2;i:840;}i:42;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:845;}i:43;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" context n(&a, &b)
";}i:2;i:847;}i:44;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:866;}i:45;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:" We now may refer to &n in both the parent and child contexts
";}i:2;i:868;}i:46;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:930;}i:47;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:92:" These references are passed to the child context from the parent context
enclosed_refs ::= ";}i:2;i:932;}i:48;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1024;}i:49;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"(";}i:2;i:1025;}i:50;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1026;}i:51;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:" ws (ref (ws ";}i:2;i:1027;}i:52;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1040;}i:53;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:",";}i:2;i:1041;}i:54;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1042;}i:55;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" ws ref)*)? ws ";}i:2;i:1043;}i:56;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1058;}i:57;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:")";}i:2;i:1059;}i:58;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1060;}i:59;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:1061;}i:60;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1062;}i:61;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:104:" Like in javascript, if there are no references, the parentheses are still required
context_name ::= id
";}i:2;i:1064;}i:62;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:1168;}i:63;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:201:" Arbitrary, left up to the language model; like a local variable (used henceforth as a reference, &context_name). This is a handle to a concept, a node in the graphdb, that refers to this very context.";}i:2;i:1170;}i:64;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1371;}i:65;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1371;}i:66;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:51:"context_body ::= (ws|statement|inline_annotation)*
";}i:2;i:1373;}i:67;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1424;}i:68;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:157:" The inline annotations give, for instance, a sense of time and sequence to the conversation. They allow for showing simultaneous events, interrupted speech ";}i:2;i:1426;}i:69;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:3:"...";}i:2;i:1583;}i:70;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:147:"

statement ::= (ws (context | sensor_report | rule | fact | instantiation | comment | question | function_call_and_response | tldr) ws)

tldr ::= ";}i:2;i:1586;}i:71;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1733;}i:72;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"tl;dr";}i:2;i:1734;}i:73;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1739;}i:74;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" ws nlp
";}i:2;i:1740;}i:75;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:1748;}i:76;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:137:" This is essentially the equivalent of a return statement in a function. It will be used to abbreviate the context in its parent context.";}i:2;i:1750;}i:77;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:1887;}i:78;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:1887;}i:79;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:"memory_literal ::= ";}i:2;i:1889;}i:80;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:1908;}i:81;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"memory:";}i:2;i:1909;}i:82;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:1916;}i:83;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" [0-9]+
";}i:2;i:1917;}i:84;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:1925;}i:85;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:90:" This is the id of a node as stored in the graphdb

context_abbreviation ::= context_head ";}i:2;i:1927;}i:86;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2017;}i:87;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"=";}i:2;i:2018;}i:88;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2019;}i:89;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" ws memory_literal
";}i:2;i:2020;}i:90;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2039;}i:91;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:156:" This works by abbreviating child contexts that have been closed and scrolled out of view. For language models, token space is limited, so this is a way of ";}i:2;i:2041;}i:92;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2197;}i:93;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:"zooming in";}i:2;i:2198;}i:94;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2208;}i:95;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" to a part of a log.";}i:2;i:2209;}i:96;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2229;}i:97;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2229;}i:98;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:18:"sensor_report ::= ";}i:2;i:2231;}i:99;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2249;}i:100;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"!!";}i:2;i:2250;}i:101;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2252;}i:102;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" [^\n]*
";}i:2;i:2253;}i:103;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2261;}i:104;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:97:" This is how the system exposes its sensor data to the language model. Example: !! thermometer { ";}i:2;i:2263;}i:105;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2360;}i:106;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:11:"temperature";}i:2;i:2361;}i:107;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2372;}i:108;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:62:": 30 }

function_call_and_response ::= command (ws feedback)?
";}i:2;i:2373;}i:109;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2435;}i:110;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:" We must stress to the language model that it may only generate commands. The feedback is generated procedurally by the system.";}i:2;i:2437;}i:111;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2564;}i:112;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2564;}i:113;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:13:"feedback ::= ";}i:2;i:2566;}i:114;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2579;}i:115;a:3:{i:0;s:6:"entity";i:1;a:1:{i:0;s:2:">>";}i:2;i:2580;}i:116;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2582;}i:117;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:19:" ws structured_data";}i:2;i:2583;}i:118;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:2602;}i:119;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:2602;}i:120;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:25:"instantiation ::= ref ws ";}i:2;i:2604;}i:121;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:2629;}i:122;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"=";}i:2;i:2630;}i:123;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:2631;}i:124;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:50:" ws (nlp | memory_literal | context_abbreviation)
";}i:2;i:2632;}i:125;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:2682;}i:126;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:166:" Setting a reference to an nlp string is a way of making a new concept in the graphdb, or finding an existing one based on the natural language description provided;
";}i:2;i:2684;}i:127;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:2850;}i:128;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:178:" Using a memory literal uses an absolute address of a node in the db; it is a way of indicating to the language model how it can request an expanded version of the child context
";}i:2;i:2852;}i:129;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:3030;}i:130;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" Swapping these out is a way for PETE to ";}i:2;i:3032;}i:131;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3073;}i:132;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"fold";}i:2;i:3074;}i:133;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3078;}i:134;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:" and ";}i:2;i:3079;}i:135;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3084;}i:136;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:6:"unfold";}i:2;i:3085;}i:137;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3091;}i:138;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:101:" parts of the conversation to fit it into finite space for the language model

inline_annotation ::= ";}i:2;i:3092;}i:139;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3193;}i:140;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:3194;}i:141;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3195;}i:142;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:3196;}i:143;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3197;}i:144;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"[";}i:2;i:3198;}i:145;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3199;}i:146;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" ws not_bracket+ ws ";}i:2;i:3200;}i:147;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3220;}i:148;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"]";}i:2;i:3221;}i:149;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3222;}i:150;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3223;}i:151;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:3224;}i:152;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:127:" Provides structure to the memory, especially in time. Also used as a way to set fields on the node that represents the context";}i:2;i:3226;}i:153;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3353;}i:154;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3353;}i:155;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"fact ::= predication ";}i:2;i:3355;}i:156;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3376;}i:157;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:".";}i:2;i:3377;}i:158;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3378;}i:159;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:3379;}i:160;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:3380;}i:161;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:151:" Very much like a fact in Prolog. An assertion that the predication is true

predication ::= argument ws negator? ws predicate ws argument
negator ::= ";}i:2;i:3382;}i:162;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3533;}i:163;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"!";}i:2;i:3534;}i:164;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3535;}i:165;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:3536;}i:166;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3539;}i:167;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:7:"doesn't";}i:2;i:3540;}i:168;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3547;}i:169;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:3548;}i:170;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3551;}i:171;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"don't";}i:2;i:3552;}i:172;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3557;}i:173;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:3558;}i:174;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3561;}i:175;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"not";}i:2;i:3562;}i:176;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3565;}i:177;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"

predicate ::= id (";}i:2;i:3566;}i:178;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3586;}i:179;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"e";}i:2;i:3587;}i:180;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3588;}i:181;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"? ";}i:2;i:3589;}i:182;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3591;}i:183;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"s";}i:2;i:3592;}i:184;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3593;}i:185;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:")?
";}i:2;i:3594;}i:186;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:3597;}i:187;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" A pretty pathetic admission that you can say ";}i:2;i:3599;}i:188;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3645;}i:189;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"say";}i:2;i:3646;}i:190;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3649;}i:191;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" or ";}i:2;i:3650;}i:192;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3654;}i:193;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"says";}i:2;i:3655;}i:194;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3659;}i:195;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" to use with $I
";}i:2;i:3660;}i:196;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:3676;}i:197;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:139:" The predicates are the edges between concept nodes in the database

argument ::= value | ref | abstraction | coorelative | memory_literal
";}i:2;i:3678;}i:198;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:3817;}i:199;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" Essentially, a noun phrase";}i:2;i:3819;}i:200;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:3846;}i:201;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:3846;}i:202;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"abstraction ::= ";}i:2;i:3848;}i:203;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3864;}i:204;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"that";}i:2;i:3865;}i:205;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3869;}i:206;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:" predication (ws conjunction ws predication)*
";}i:2;i:3870;}i:207;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:3916;}i:208;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:72:" Makes a concept that refers to the predication itself

conjunction ::= ";}i:2;i:3918;}i:209;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3990;}i:210;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"and";}i:2;i:3991;}i:211;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:3994;}i:212;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:3995;}i:213;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:3998;}i:214;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"or";}i:2;i:3999;}i:215;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4001;}i:216;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:4002;}i:217;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4005;}i:218;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"but";}i:2;i:4006;}i:219;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4009;}i:220;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:4010;}i:221;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:4011;}i:222;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:" ";}i:2;i:4013;}i:223;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4014;}i:224;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"but";}i:2;i:4015;}i:225;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4018;}i:226;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" == ";}i:2;i:4019;}i:227;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4023;}i:228;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:"and";}i:2;i:4024;}i:229;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4027;}i:230;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:", fyi";}i:2;i:4028;}i:231;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4033;}i:232;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4033;}i:233;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:"coorelative ::= ";}i:2;i:4035;}i:234;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4051;}i:235;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"_";}i:2;i:4052;}i:236;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4053;}i:237;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" id
";}i:2;i:4054;}i:238;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:4058;}i:239;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:41:" Extracts the value into this reference; ";}i:2;i:4060;}i:240;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4101;}i:241;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"_carnivore eats &meat";}i:2;i:4102;}i:242;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4123;}i:243;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" is like Prolog ";}i:2;i:4124;}i:244;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4140;}i:245;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:21:"eats(Carnivore, meat)";}i:2;i:4141;}i:246;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4162;}i:247;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:27:" 

command ::= (invocation ";}i:2;i:4163;}i:248;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4190;}i:249;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:",";}i:2;i:4191;}i:250;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4192;}i:251;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:78:" ws)? procedure_name ws structured_data?
procedure_name ::= id
invocation ::= ";}i:2;i:4193;}i:252;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4271;}i:253;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"@";}i:2;i:4272;}i:254;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4273;}i:255;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:24:" faculty
faculty ::= id
";}i:2;i:4274;}i:256;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:4298;}i:257;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:85:" Faculties have identifiers that they may respond to procedures they somehow publish
";}i:2;i:4300;}i:258;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:4385;}i:259;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:35:" cf. OpenAI functions

comment ::= ";}i:2;i:4387;}i:260;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4422;}i:261;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:4423;}i:262;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4425;}i:263;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:" [^\n]*
";}i:2;i:4426;}i:264;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:4434;}i:265;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:110:" More meaningful to a language model than in traditional code. This serves as a way for the language model to ";}i:2;i:4436;}i:266;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4546;}i:267;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"think things through";}i:2;i:4547;}i:268;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4567;}i:269;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:105:" in a form of reflection. We must explain to the LM that the context is its internal monologue.

ref ::= ";}i:2;i:4568;}i:270;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4673;}i:271;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"&";}i:2;i:4674;}i:272;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4675;}i:273;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:" id
";}i:2;i:4676;}i:274;a:3:{i:0;s:14:"emphasis_close";i:1;a:0:{}i:2;i:4680;}i:275;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:22:" A handle to a concept";}i:2;i:4682;}i:276;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4704;}i:277;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4704;}i:278;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:49:"id ::= [a-zA-Z][a-zA-Z0-9_]*
ws ::= ([ \t\n] ws)?";}i:2;i:4706;}i:279;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:4755;}i:280;a:3:{i:0;s:6:"p_open";i:1;a:0:{}i:2;i:4755;}i:281;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:8:"nlp ::= ";}i:2;i:4757;}i:282;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4765;}i:283;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"/*";}i:2;i:4766;}i:284;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4768;}i:285;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:10:" nlp_body ";}i:2;i:4769;}i:286;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4779;}i:287;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:2:"*/";}i:2;i:4780;}i:288;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4782;}i:289;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"
";}i:2;i:4783;}i:290;a:3:{i:0;s:13:"emphasis_open";i:1;a:0:{}i:2;i:4784;}i:291;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:142:" Much more meaningful than a comment in a traditional language
nlp_body ::= (not_star | star_not_slash)*
not_star ::= [^*]
star_not_slash ::= ";}i:2;i:4786;}i:292;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:4928;}i:293;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"*";}i:2;i:4929;}i:294;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:4930;}i:295;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:74:" [^/]
not_bracket ::= [^\]]
structured_data ::= object | array
object ::= ";}i:2;i:4931;}i:296;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5005;}i:297;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"{";}i:2;i:5006;}i:298;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5007;}i:299;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:14:" ws (pair (ws ";}i:2;i:5008;}i:300;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5022;}i:301;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:",";}i:2;i:5023;}i:302;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5024;}i:303;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:16:" ws pair)*)? ws ";}i:2;i:5025;}i:304;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5041;}i:305;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"}";}i:2;i:5042;}i:306;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5043;}i:307;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:"
pair ::= string ws ";}i:2;i:5044;}i:308;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5064;}i:309;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:":";}i:2;i:5065;}i:310;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5066;}i:311;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:20:" ws value
array ::= ";}i:2;i:5067;}i:312;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5087;}i:313;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"[";}i:2;i:5088;}i:314;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5089;}i:315;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:15:" ws (value (ws ";}i:2;i:5090;}i:316;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5105;}i:317;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:",";}i:2;i:5106;}i:318;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5107;}i:319;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:17:" ws value)*)? ws ";}i:2;i:5108;}i:320;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5125;}i:321;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:1:"]";}i:2;i:5126;}i:322;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5127;}i:323;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:46:"
value ::= string | number | object | array | ";}i:2;i:5128;}i:324;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5174;}i:325;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"true";}i:2;i:5175;}i:326;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5179;}i:327;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:5180;}i:328;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5183;}i:329;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:5:"false";}i:2;i:5184;}i:330;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5189;}i:331;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:3:" | ";}i:2;i:5190;}i:332;a:3:{i:0;s:18:"doublequoteopening";i:1;a:0:{}i:2;i:5193;}i:333;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:4:"null";}i:2;i:5194;}i:334;a:3:{i:0;s:18:"doublequoteclosing";i:1;a:0:{}i:2;i:5198;}i:335;a:3:{i:0;s:5:"cdata";i:1;a:1:{i:0;s:0:"";}i:2;i:5199;}i:336;a:3:{i:0;s:7:"p_close";i:1;a:0:{}i:2;i:5199;}i:337;a:3:{i:0;s:12:"document_end";i:1;a:0:{}i:2;i:5199;}}