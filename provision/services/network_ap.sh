#!/usr/bin/env bash
set -euo pipefail
. "$(dirname "$0")/_common.sh" 2>/dev/null || true

# network_ap.sh — Provision a self-contained Wi-Fi access point for Psyche robots.
#
# Features:
# - Installs hostapd, dnsmasq, and Avahi so the robot can advertise DDS peers.
# - Writes a configurable defaults file under /etc/default/psyched-network-ap.
# - Generates hostapd/dnsmasq configuration snippets consumed by the launcher.
# - Ships an Avahi service manifest advertising a DDS UDP endpoint.

ETC_DIR="/etc/psyched"
DEFAULTS_FILE="/etc/default/psyched-network-ap"
HOSTAPD_CONF="${ETC_DIR}/network-ap.hostapd.conf"
DNSMASQ_CONF="${ETC_DIR}/network-ap.dnsmasq.conf"
AVAHI_SERVICE="/etc/avahi/services/psyched-dds.service"

queue_dependencies() {
  export PSY_DEFER_APT=1
  common_apt_install hostapd dnsmasq avahi-daemon iproute2
}

write_defaults_file() {
  if [ -f "$DEFAULTS_FILE" ]; then
    return 0
  fi

  sudo tee "$DEFAULTS_FILE" >/dev/null <<'EOF'
# Psyche Wi-Fi access point defaults (override with exports before provisioning).
#
# PSY_AP_INTERFACE — Wireless interface to configure in AP mode.
PSY_AP_INTERFACE=wlan0
# PSY_AP_SSID — Broadcast SSID used by the onboard access point.
PSY_AP_SSID=psyched-net
# PSY_AP_PASSWORD — WPA2 passphrase shared with operators and field laptops.
PSY_AP_PASSWORD=psychedrobo
# PSY_AP_CHANNEL — Channel number (1-11 for 2.4 GHz) used by hostapd.
PSY_AP_CHANNEL=6
# PSY_AP_COUNTRY — Two-letter regulatory domain for hostapd.
PSY_AP_COUNTRY=US
# PSY_AP_ADDRESS — Static IPv4 address assigned to the AP interface.
PSY_AP_ADDRESS=10.42.0.1
# PSY_AP_PREFIXLEN — Prefix length applied when configuring the address.
PSY_AP_PREFIXLEN=24
# PSY_AP_DHCP_RANGE — dnsmasq DHCP range (start,end,lease) served to peers.
PSY_AP_DHCP_RANGE=10.42.0.10,10.42.0.200,12h
EOF
}

install_avahi_service() {
  sudo mkdir -p "$(dirname "$AVAHI_SERVICE")"
  sudo tee "$AVAHI_SERVICE" >/dev/null <<'EOF'
<?xml version="1.0" standalone='no'?><!-- Auto-generated by network_ap.sh -->
<!DOCTYPE service-group SYSTEM "avahi-service.dtd">
<service-group>
  <name replace-wildcards="yes">%h Psyche DDS</name>
  <service>
    <type>_dds._udp</type>
    <port>7400</port>
    <txt-record>enclave=psyche</txt-record>
  </service>
</service-group>
EOF
}

install_launcher() {
  sudo mkdir -p "$ETC_DIR"
  common_install_launcher network_ap LAUNCH <<'LAUNCH'
#!/usr/bin/env bash
set -euo pipefail

defaults="/etc/default/psyched-network-ap"
[ -f "$defaults" ] && set +u && source "$defaults" && set -u

AP_INTERFACE="${PSY_AP_INTERFACE:-wlan0}"
AP_SSID="${PSY_AP_SSID:-psyched-net}"
AP_PASSWORD="${PSY_AP_PASSWORD:-psychedrobo}"
AP_CHANNEL="${PSY_AP_CHANNEL:-6}"
AP_COUNTRY="${PSY_AP_COUNTRY:-US}"
AP_ADDRESS="${PSY_AP_ADDRESS:-10.42.0.1}"
AP_PREFIXLEN="${PSY_AP_PREFIXLEN:-24}"
AP_DHCP_RANGE="${PSY_AP_DHCP_RANGE:-10.42.0.10,10.42.0.200,12h}"
HOSTAPD_CONF="${PSY_AP_HOSTAPD_CONF:-/etc/psyched/network-ap.hostapd.conf}"
DNSMASQ_CONF="${PSY_AP_DNSMASQ_CONF:-/etc/psyched/network-ap.dnsmasq.conf}"
hostapd_pid=""
dnsmasq_pid=""

cleanup() {
  trap - INT TERM EXIT
  ip link set "$AP_INTERFACE" down >/dev/null 2>&1 || true
  if [ -n "${hostapd_pid:-}" ]; then
    kill "$hostapd_pid" >/dev/null 2>&1 || true
  fi
  if [ -n "${dnsmasq_pid:-}" ]; then
    kill "$dnsmasq_pid" >/dev/null 2>&1 || true
  fi
}

trap cleanup INT TERM EXIT

ip link set "$AP_INTERFACE" down >/dev/null 2>&1 || true
ip addr flush dev "$AP_INTERFACE" >/dev/null 2>&1 || true
ip addr add "${AP_ADDRESS}/${AP_PREFIXLEN}" dev "$AP_INTERFACE"
ip link set "$AP_INTERFACE" up

cat >"$HOSTAPD_CONF" <<EOF
country_code=${AP_COUNTRY}
interface=${AP_INTERFACE}
ssid=${AP_SSID}
hw_mode=g
channel=${AP_CHANNEL}
wmm_enabled=1
macaddr_acl=0
auth_algs=1
ignore_broadcast_ssid=0
wpa=2
wpa_passphrase=${AP_PASSWORD}
wpa_key_mgmt=WPA-PSK
rsn_pairwise=CCMP
EOF

cat >"$DNSMASQ_CONF" <<EOF
interface=${AP_INTERFACE}
bind-interfaces
server=1.1.1.1
listen-address=${AP_ADDRESS}
dhcp-range=${AP_DHCP_RANGE}
dhcp-option=option:router,${AP_ADDRESS}
dhcp-option=option:dns-server,${AP_ADDRESS}
EOF

hostapd "$HOSTAPD_CONF" &
hostapd_pid=$!

dnsmasq --no-daemon --conf-file="$DNSMASQ_CONF" &
dnsmasq_pid=$!

wait "$hostapd_pid" "$dnsmasq_pid"
LAUNCH
}

provision() {
  queue_dependencies
  write_defaults_file
  install_avahi_service
  install_launcher
}

case "${1:-provision}" in
  provision)
    provision
    ;;
  *)
    echo "network_ap.sh: unknown command $1" >&2
    exit 1
    ;;
esac
